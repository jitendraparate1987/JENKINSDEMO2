<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="6" ignored="8" total="23" passed="7" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-11T00:17:57 IST" name="Suite" finished-at="2024-04-11T00:18:16 IST" duration-ms="18308">
    <groups>
    </groups>
    <test started-at="2024-04-11T00:17:57 IST" name="Test" finished-at="2024-04-11T00:18:16 IST" duration-ms="18308">
      <class name="Test.BasicTest1">
        <test-method is-config="true" signature="BeforeSuiteMethod(java.lang.String)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:17:53 IST" name="BeforeSuiteMethod" finished-at="2024-04-11T00:17:57 IST" duration-ms="4175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuiteMethod -->
        <test-method is-config="true" signature="BeforeTestMethod()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:17:57 IST" name="BeforeTestMethod" finished-at="2024-04-11T00:17:58 IST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestMethod -->
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:17:58 IST" name="beforeClassMethod" finished-at="2024-04-11T00:17:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:17:58 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:17:58 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest1.Method1()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method retried="true" signature="Method1()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:17:58 IST" name="Method1" finished-at="2024-04-11T00:18:00 IST" duration-ms="2508" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.BasicTest1.Method1(BasicTest1.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method1 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:00 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:00 IST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method1 status=SKIP method=BasicTest1.Method1()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:00 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest1.Method1()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method retried="true" signature="Method1()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:00 IST" name="Method1" finished-at="2024-04-11T00:18:02 IST" duration-ms="1169" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.BasicTest1.Method1(BasicTest1.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method1 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:02 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method1 status=SKIP method=BasicTest1.Method1()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:02 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest1.Method1()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method retried="true" signature="Method1()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:02 IST" name="Method1" finished-at="2024-04-11T00:18:02 IST" duration-ms="638" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.BasicTest1.Method1(BasicTest1.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method1 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:02 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:02 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method1 status=SKIP method=BasicTest1.Method1()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:02 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest1.Method1()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method signature="Method1()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:02 IST" name="Method1" finished-at="2024-04-11T00:18:03 IST" duration-ms="624" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.BasicTest1.Method1(BasicTest1.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method1 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:03 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:03 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method1 status=FAILURE method=BasicTest1.Method1()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:03 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest1.Method2()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method signature="Method2()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:03 IST" name="Method2" finished-at="2024-04-11T00:18:05 IST" duration-ms="2197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method2 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:05 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:05 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method2 status=SUCCESS method=BasicTest1.Method2()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:05 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest1.Method3()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method signature="Method3()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:05 IST" name="Method3" finished-at="2024-04-11T00:18:05 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method3 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:05 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method3 status=SUCCESS method=BasicTest1.Method3()[pri:0, instance:Test.BasicTest1@4d5650ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:05 IST" name="afterClassMethod" finished-at="2024-04-11T00:18:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
        <test-method is-config="true" signature="AfterTestMethod()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:16 IST" name="AfterTestMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestMethod -->
        <test-method is-config="true" signature="AfterSuiteMethod()[pri:0, instance:Test.BasicTest1@4d5650ae]" started-at="2024-04-11T00:18:16 IST" name="AfterSuiteMethod" finished-at="2024-04-11T00:18:17 IST" duration-ms="1042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuiteMethod -->
      </class> <!-- Test.BasicTest1 -->
      <class name="Test.BasicTest2">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:05 IST" name="beforeClassMethod" finished-at="2024-04-11T00:18:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:05 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest2.Method4()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method retried="true" signature="Method4()[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:05 IST" name="Method4" finished-at="2024-04-11T00:18:08 IST" duration-ms="2949" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.BasicTest2.Method4(BasicTest2.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method4 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:08 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method4 status=SKIP method=BasicTest2.Method4()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:08 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:08 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest2.Method4()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method retried="true" signature="Method4()[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:08 IST" name="Method4" finished-at="2024-04-11T00:18:10 IST" duration-ms="1783" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.BasicTest2.Method4(BasicTest2.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method4 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:10 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method4 status=SKIP method=BasicTest2.Method4()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:10 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest2.Method4()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method retried="true" signature="Method4()[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:10 IST" name="Method4" finished-at="2024-04-11T00:18:13 IST" duration-ms="2426" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.BasicTest2.Method4(BasicTest2.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method4 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:13 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method4 status=SKIP method=BasicTest2.Method4()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method signature="Method4()[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:13 IST" name="Method4" finished-at="2024-04-11T00:18:15 IST" duration-ms="2257" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at Test.BasicTest2.Method4(BasicTest2.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method4 -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:13 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest2.Method4()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:16 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method4 status=FAILURE method=BasicTest2.Method4()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:16 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest2.Method5()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method signature="Method5()[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:16 IST" name="Method5" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method5 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:16 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method5 status=SUCCESS method=BasicTest2.Method5()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:16 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest2.Method6()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method signature="Method6()[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:16 IST" name="Method6" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method6 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:16 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method6 status=SUCCESS method=BasicTest2.Method6()[pri:0, instance:Test.BasicTest2@25641d39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:Test.BasicTest2@25641d39]" started-at="2024-04-11T00:18:16 IST" name="afterClassMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- Test.BasicTest2 -->
      <class name="Test.BasicTest3">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="beforeClassMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest3.Method7()[pri:0, instance:Test.BasicTest3@7b36aa0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method signature="Method7()[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="Method7" finished-at="2024-04-11T00:18:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method7 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method7 status=SUCCESS method=BasicTest3.Method7()[pri:0, instance:Test.BasicTest3@7b36aa0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest3.Method8()[pri:0, instance:Test.BasicTest3@7b36aa0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method signature="Method8()[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="Method8" finished-at="2024-04-11T00:18:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method8 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method8 status=SUCCESS method=BasicTest3.Method8()[pri:0, instance:Test.BasicTest3@7b36aa0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="BeforeMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="BeforeMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=BasicTest3.Method9()[pri:0, instance:Test.BasicTest3@7b36aa0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodMethod -->
        <test-method signature="Method9()[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="Method9" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method9 -->
        <test-method is-config="true" signature="AfterMethodMethod(org.testng.ITestResult)[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="AfterMethodMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Method9 status=SUCCESS method=BasicTest3.Method9()[pri:0, instance:Test.BasicTest3@7b36aa0c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodMethod -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:Test.BasicTest3@7b36aa0c]" started-at="2024-04-11T00:18:16 IST" name="afterClassMethod" finished-at="2024-04-11T00:18:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- Test.BasicTest3 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
